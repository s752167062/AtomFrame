{"version":3,"sources":["../../../../../assets/JJGame/Script/assets/JJGame/Script/MapController.js"],"names":["cc","Class","extends","Component","properties","TAG","ctor","console","log","onLoad","onDestory","makeBrick","brickNum","Atom","gameConfMgr","getInfo","bricList","i","item","brickType","aiBrickType","makeBrickNodes","index_tag","bricList_data","brickNodeList","length","node","prefabMgr","getPrefabObj","name","brickScript","getComponent","setBrickData"],"mappings":";;;;;;;;AAAA;AACA;;;;AAIAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,aAAK;AADG,KAHP;;AAOLC,QAPK,kBAOE;AACHC,gBAAQC,GAAR,CAAY,UAAU,KAAKH,GAA3B;AACH,KATI;AAWLI,UAXK,oBAWG;AACJF,gBAAQC,GAAR,CAAY,WAAW,KAAKH,GAA5B;AACH,KAbI;AAeLK,aAfK,uBAeM;AACPH,gBAAQC,GAAR,CAAY,cAAc,KAAKH,GAA/B;AACH,KAjBI;;;AAmBL;AACAM,aApBK,uBAoBM;AACP,YAAIC,WAAWZ,GAAGa,IAAH,CAAQC,WAAR,CAAoBC,OAApB,CAA4B,UAA5B,CAAf;AACA,YAAIC,WAAW,EAAf;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,QAApB,EAA8BK,GAA9B,EAAmC;AAC/B,gBAAIC,OAAO,EAAX;AACAA,iBAAKC,SAAL,GAAgB,KAAKC,WAAL,EAAhB;AACAF,iBAAKN,QAAL,GAAgBA,QAAhB,CAH+B,CAGN;AACzBI,qBAASC,CAAT,IAAcC,IAAd;AACH;AACD,eAAOF,QAAP;AACH,KA9BI;AA+BLI,eA/BK,yBA+BQ;AACT;AACA,eAAO,MAAP;AACH,KAlCI;;;AAoCL;AACA;AACAC,kBAtCK,0BAsCUC,SAtCV,EAsCoB;AACrB,YAAIC,gBAAgB,KAAKZ,SAAL,EAApB;AACA,YAAIa,gBAAgB,EAApB;AACA,aAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAIM,cAAcE,MAAlC,EAA0CR,GAA1C,EAA+C;AAC3C,gBAAIC,OAAOK,cAAcN,CAAd,CAAX;AACA,gBAAIS,OAAO1B,GAAGa,IAAH,CAAQc,SAAR,CAAkBC,YAAlB,CAA+B,OAA/B,CAAX,CAF2C,CAES;AACpD;AACArB,oBAAQC,GAAR,CAAY,kCAAiCkB,IAAjC,yCAAiCA,IAAjC,EAAZ;AACA,gBAAGA,QAAQ,IAAX,EAAgB;AACZA,qBAAKG,IAAL,GAAY,MAAMP,YAAYL,CAAlB,CAAZ;AACA;AACA,oBAAIa,cAAcJ,KAAKK,YAAL,CAAkB,eAAlB,CAAlB;AACAD,4BAAYE,YAAZ,CAAyBd,IAAzB;AACAM,8BAAcP,CAAd,IAAmBS,IAAnB;AACH,aAND,MAMK;AACDnB,wBAAQC,GAAR,CAAY,sDAAZ;AACH;AAEJ;AACD,eAAOgB,aAAP;AACH;;AAGD;;AA7DK,CAAT","file":"MapController.js","sourceRoot":"../../../../../assets/JJGame/Script","sourcesContent":["//MapController 只负责数据的生成，不包含节点\n/*\n    1.地图初始生成 后续在生成点添加新的点\n    2.地图向下移动，出地图的部分自动删除\n*/\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        TAG: \"MapController\"\n    },\n\n    ctor() {\n        console.log(\"-new:\" + this.TAG);\n    },\n\n    onLoad(){\n        console.log(\"-load:\" + this.TAG);\n    },\n\n    onDestory(){\n        console.log(\"-destory:\" + this.TAG);\n    },\n\n    //生成砖块数据\n    makeBrick(){\n        var brickNum = cc.Atom.gameConfMgr.getInfo(\"brickNum\");\n        var bricList = [];\n        for (var i = 0; i < brickNum; i++) {\n            var item = {};\n            item.brickType= this.aiBrickType(); \n            item.brickNum = brickNum;//本阶的砖块数量\n            bricList[i] = item;\n        }\n        return bricList;\n    },\n    aiBrickType(){\n        //ai 运算是什么类型  base , empy , trap , buff\n        return \"base\";\n    },\n\n    //生成位置节点\n    //index_tag 新一行的起始tag  （循环的 1-50 ）\n    makeBrickNodes(index_tag){\n        var bricList_data = this.makeBrick();\n        var brickNodeList = [];\n        for (var i = 0; i < bricList_data.length; i++) {\n            var item = bricList_data[i];\n            var node = cc.Atom.prefabMgr.getPrefabObj(\"brick\"); //创建一个砖块 prefab节点\n            //预设对象才处理\n            console.log(\">>> prefab obj type :\" + typeof(node))\n            if(node != null){\n                node.name = \"\" + (index_tag + i);\n                //获取预制资源中的js组件，并作出相应操作\n                var brickScript = node.getComponent('BrickDelegate');\n                brickScript.setBrickData(item);\n                brickNodeList[i] = node;\n            }else{\n                console.log(\">>>> ERR makeBrickNodes node not a prefab object !!!\")\n            }\n\n        } \n        return brickNodeList;\n    }\n\n    \n    //获取下一个阶\n});\n"]}