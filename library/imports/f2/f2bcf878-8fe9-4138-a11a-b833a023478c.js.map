{"version":3,"sources":["../../../../../assets/JJGame/Script/assets/JJGame/Script/JJGameController.js"],"names":["cc","Class","extends","Component","properties","mapLayer","default","type","Node","onLoad","atom","require","createAtom","gameUpdateInterval","Atom","gameConfMgr","getInfo","gameSpeed","maxSteps","indexOffset","start","loadRes","console","log","resMgr","loadResByKey","index","total","err","prefabMgr","loadAllPrefab","key","path","addBrick","indexTag","player_indexTag","minterval","mapController","getComponent","i","bricklist","makeBrickNodes","j","length","node","width","height","x","y","parent","Number","update","dt"],"mappings":"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","file":"JJGameController.js","sourceRoot":"../../../../../assets/JJGame/Script","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //地图层\n        mapLayer:{\n            default:null,\n            type:cc.Node,\n        },\n    },\n\n    onLoad () {\n        const atom = require(\"AtomFrame/Atom\");\n        atom.createAtom();\n\n        this.gameUpdateInterval = cc.Atom.gameConfMgr.getInfo(\"gameUpdateInterval\");\n        this.gameSpeed = cc.Atom.gameConfMgr.getInfo(\"gameSpeed\"); //节奏提速\n        this.maxSteps = cc.Atom.gameConfMgr.getInfo(\"maxSteps\");   //最大层数\n        this.indexOffset = cc.Atom.gameConfMgr.getInfo(\"indexOffset\");//阶的偏移index\n    },\n\n    start () {    \n        // console.log(\">>> start\")\n        this.loadRes();\n    },\n\n    loadRes(){\n        console.log(\">>>> loadres \")\n        cc.Atom.resMgr.loadResByKey(\"JJGameRes\" , (index , total , err)=>{\n            if(err != null || index == -1){\n                console.log(\"=== 加载资源出现异常： \",err);\n                return\n            }\n            console.log(\" 资源加载进度 ： \" ,index , total);\n            if(index == total){\n                console.log(\"=== 加载完成\")\n                cc.Atom.prefabMgr.loadAllPrefab([{ key: \"brick\", path:\"JJGameRes/prefabs/item\"} ,\n                                                 { key: \"player_obj\", path:\"JJGameRes/prefabs/player_obj\"}], \n                                                 (index)=>{ \n                                                    console.log(index, \"prefabs loadfinish\" ) \n                                                    this.addBrick();\n                                                });\n            }\n        }) \n    },\n\n    addBrick(){\n        this.indexTag = 0; //\n        this.player_indexTag = 0;\n        this.minterval = 0;\n\n        this.mapController = this.mapLayer.getComponent('MapController');\n        //创建基础地图\n        for (var i = this.indexOffset; i <= this.maxSteps; i+= this.maxSteps/this.indexOffset) {\n            var bricklist = this.mapController.makeBrickNodes(i)\n            for (var j = 0; j < bricklist.length; j++) {\n                var node = bricklist[j];\n                if(node){\n                    var width  = node.width;\n                    var height = node.height;\n                    var x = (j+1 - ( bricklist.length +1) /2) * width ;\n                    var y = i/10  * height + height/2;\n                    node.parent = this.mapLayer;\n                    node.x = x;\n                    node.y = y;\n                    console.log(\">>>> addBrick position : %d , %d ; %d , %d   / %d\" , width , height ,Number(x) , Number(y) , i)\n                }\n            }\n        }\n    },\n\n    update (dt) {\n        this.minterval += dt \n        if(this.minterval * this.gameSpeed >= this.gameUpdateInterval){\n            this.indexTag += this.indexOffset;\n            if(this.indexTag > this.maxSteps){\n                this.indexTag = this.indexOffset;//一个地图循环\n            }\n\n            //删除循环外的\n\n\n            //获取下一个砖块\n            //角色跳\n            //地图新增一阶\n            //地图移动\n        }\n    },\n});\n"]}