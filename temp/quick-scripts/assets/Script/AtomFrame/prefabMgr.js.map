{"version":3,"sources":["prefabMgr.js"],"names":["cc","Class","extends","Component","properties","TAG","ctor","console","log","prefabPool","resPrefab","onLoad","onDestroy","loadAllPrefab","resData","callback","index","length","element","path","key","loader","loadRes","err","prefab","error","message","addPrefabObj","prefabKey","Prefab","getPrefabObj","instantiate","nodepool","get","holdPrefabObj","obj","NodePool","put","releasePrefabObj","clear","releaseAllPrefabObj","hasOwnProperty"],"mappings":"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","file":"prefabMgr.js","sourceRoot":"../../../../../assets/Script/AtomFrame","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        TAG: \"prefabMgr\",\n        // nodePool:{ //堆栈的数据结构\n        //     default:null,\n        //     type: cc.NodePool,\n        // }\n    },\n\n    ctor: function () {\n        console.log(\"-new:\" + this.TAG);\n        this.prefabPool = {}; \n        this.resPrefab = {}\n    },\n\n    onLoad: function () {\n        console.log(\"-load:\" + this.TAG);\n    },\n\n    onDestroy: function () {\n        console.log(\"-destory:\" + this.TAG);\n    },\n\n    loadAllPrefab: function (resData , callback) {\n        if(resData != null && typeof(resData) == \"object\"){\n            for (var index = 0; index < resData.length; index++) {\n                var element = resData[index];\n                var path = element.path\n                var key  = element.key\n                //\n                cc.loader.loadRes(path, (err, prefab)=> {\n                    if(err){\n                        console.log(\">>> loadAllPrefab err !!\")\n                        cc.error(err.message || err);\n                        return \n                    }\n                    this.resPrefab[key] = prefab // (prefab instanceof cc.Prefab ); 检查是否是 prefab object\n                    callback(index);\n                }) \n            }\n        }else{\n            console.log(\"null resData !!\")\n        }\n    },\n\n    addPrefabObj: function (prefabKey, prefab) {\n        if (prefabKey == null || !prefabKey instanceof cc.Prefab){\n            console.log(\" ------- 类型异常 \", prefabKey);\n            return \n        }\n        this.resPrefab[prefabKey] = prefab // (prefab instanceof cc.Prefab ); 检查是否是 prefab object\n    },\n\n    //获取预设对象\n    getPrefabObj: function (prefabKey) {\n        if (typeof (prefabKey) != \"string\"){\n            console.log(\" the prefabMgr need the  prefab path : \", typeof(path))\n            return \n        }\n        if (this.resPrefab[prefabKey] == null){\n            console.log(prefabKey ,\" do not loaded , load the prefab resource frist !!!\")\n            return \n        }\n\n        if (this.prefabPool[prefabKey] == null){\n            return cc.instantiate(this.resPrefab[prefabKey])\n        }\n        //已经缓存过\n        var nodepool = this.prefabPool[prefabKey]\n        if(nodepool != null){\n            return nodepool.get();\n        }\n\n        return null ;\n    },\n\n    //挂起对象\n    holdPrefabObj: function (prefabKey ,obj) {\n        if (this.prefabPool[prefabKey] == null) {\n            this.prefabPool[prefabKey] = new cc.NodePool()\n        }\n        this.prefabPool[prefabKey].put(obj)\n    },\n\n    //释放预设对象\n    releasePrefabObj: function (path) {\n        if (this.prefabPool[path] != null){\n            this.prefabPool[path].clear()\n        }\n    },\n\n    //释放预设对象\n    releaseAllPrefabObj: function () {\n        for (var key in this.prefabPool) {\n            if (this.prefabPool.hasOwnProperty(key)) {\n                var nodepool = this.prefabPool[key];\n                nodepool.clear();\n            }\n        }\n    }\n\n\n\n});\n"]}