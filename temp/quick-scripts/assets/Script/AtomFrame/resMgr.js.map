{"version":3,"sources":["resMgr.js"],"names":["cc","Class","extends","Component","properties","TAG","ctor","console","log","url","raw","loader","loadRes","err","data","error","message","resData","JSON","stringify","onLoad","onDestroy","loadResByKey","key","callfunc","total","keyres","_value","hasOwnProperty","num","_index","element","_type","_resValue","callback","obj","_num","SpriteAtlas","Atom","spriteMgr","addSpriteAtlas","AnimationClip","animateMgr","addAniClip","Prefab","prefabMgr","addPrefabObj","Texture2D","SpriteFrame","addSpriteFrame","AudioClip","ParticleAsset","Font","releasResByKey","releaseRes","CC","cleanAniClip","cleanSpriteAtlas","cleanSpriteFrame","releasAllRes"],"mappings":"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","file":"resMgr.js","sourceRoot":"../../../../../assets/Script/AtomFrame","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        TAG: \"resMgr\",\n    },\n\n        //resMgr 需要加载ani 、audio、 files 、 font、 image 、 particle 、 prefabs\n        /*  资源结构 —— 用于针对场景进行加载 、释放\n            {\n                \"Hello\" :{\n                    \"ani1\":{ \"_type\":\"ani\" , \"_value\":\"ani/ani1\"}\n                },\n                \"common\":{},\n                \"game\"  :{},\n            }\n        */\n\n    ctor: function () {\n        console.log(\"-new:\" + this.TAG);\n        //加载资源配置\n        var url = cc.url.raw(\"resources/RESJSON.json\");\n        cc.loader.loadRes(\"RESJSON\", (err, data)=>{\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n\n            this.resData = data;\n            console.log(\">>>> RESJSON :\" + JSON.stringify(this.resData))\n            //这里需要有个回调判断资源表是否解析完成\n        });\n    },\n\n    onLoad: function () {\n        console.log(\"-load:\" + this.TAG);        \n    },\n\n    onDestroy: function () {\n        console.log(\"-destory:\" + this.TAG);\n    },\n\n    //通过key加载资源 \n    //callfunc function : 进度回调\n    //资源提示未找到文件的 查看文件路径 和 资源json配置的路径\n    loadResByKey: function (key , callfunc) {\n        console.log(\">>>> RESJSON :\" + JSON.stringify(this.resData))\n        console.log(\">>>> RESJSON :\" + JSON.stringify(this.resData[\"json\"][key]))\n        //原本一开始是 this.resData[key] 为对象内容 --升级版本后发现cc.loader.loadRes 返回的数据结构被修改了\n        if(key != null && this.resData[\"json\"][key] != null){\n            var total  = 0;\n            var keyres = this.resData[\"json\"][key]; \n            for (const _value in keyres) {\n                if (keyres.hasOwnProperty(_value)) {\n                    total ++ ;\n                }\n            }\n            console.log(\"total res = \", total);\n            //开始加载\n            var num = 0\n            for (const _index in keyres) {\n                if (keyres.hasOwnProperty(_index)) {\n                    const element = keyres[_index];\n                    const _type  = element._type ;\n                    const _resValue = element._value;\n                    const callback = function (err, obj) {\n                        if (err) {\n                            console.log(err.message || err);\n                            callfunc ?callfunc(-1, total, element._value): null;\n                            return;\n                        }\n                        const _num = ++num;\n                        //这里有两个注意点： 1 、 obj.getSpriteFrame(\"image-common2-lishizhanji\") 这SpriteFrame的名字是 creator 加载plist后显示的名字 ， 并不单单一点是打图时的文件名\n                        //                2 、 声明 var 、 const 的区别 ： 例如一开始 var _resValue 这么定义后在callback 中 _resValue 固定是第一个赋值内容，之后的赋值都没有效果  而 element._value 是每次都能重新拿到新的值的 。\n                        if (obj instanceof cc.SpriteAtlas) {\n                            console.log(\"--SpriteAtlas :\", _resValue);\n                            cc.Atom.spriteMgr.addSpriteAtlas(_index , obj)\n                        \n                        } else if (obj instanceof cc.AnimationClip) {\n                            console.log(\"--AnimationClip :\", _resValue);\n                            cc.Atom.animateMgr.addAniClip(_index, obj);\n                            //实际使用上 动画挂载在 prefab 上更加好处理\n                        } else if (obj instanceof cc.Prefab) {\n                            console.log(\"--Prefab :\", _resValue);\n                            cc.Atom.prefabMgr.addPrefabObj(_index, obj);\n                        \n                        } else if (obj instanceof cc.Texture2D) {\n                            console.log(\"--Texture2D :\", _resValue);\n                            //在实际使用中 texture 需要进一步封装成 spriteframe 才能使用，若有散图直接使用 sprite 类型\n                        \n                        } else if (obj instanceof cc.SpriteFrame) {\n                            console.log(\"--SpriteFrame :\", _resValue);\n                            cc.Atom.spriteMgr.addSpriteFrame(_index , obj)\n                        \n                        } else if (obj instanceof cc.AudioClip) {\n                            console.log(\"--AudioClip :\", _resValue);\n                      \n                        } else if (obj instanceof cc.ParticleAsset) {\n                            console.log(\"--ParticleAsset :\", _resValue);\n                        \n                        } else if (obj instanceof cc.Font) {\n                            console.log(\"--Font :\", _resValue);\n                        \n                        } else{\n                            console.log(\"--Obj \", _resValue)\n                        }\n\n                        callfunc? callfunc(_num , total, null):null;\n                    } \n\n                    //处理\n                    if (_type == \"plist\"){\n                        cc.loader.loadRes(key + \"/\" + _resValue, cc.SpriteAtlas, callback)\n                    }else if(_type == \"sprite\"){\n                        cc.loader.loadRes(key + \"/\" + _resValue, cc.SpriteFrame, callback)\n                    }else{\n                        cc.loader.loadRes(key + \"/\" + _resValue, callback)\n                    } \n                }\n            }\n\n        }else{\n            console.log(\"@@@@ 没有对应的资源 key: \", key);\n        }\n    },\n\n    //通过key释放资源\n    releasResByKey: function (key) {\n        if (key != null && this.resData[key] != null) {\n            var total = 0;\n            var keyres = this.resData[key];\n            for (const _value in keyres) {\n                if (keyres.hasOwnProperty(_value)) {\n                    total++;\n                }\n            }\n            console.log(\"total res need release= \", total);\n            //开始释放\n            for (const _index in keyres) {\n                if (keyres.hasOwnProperty(_index)) {\n                    const element = keyres[_index];\n                    const _type = element._type;\n                    const _resValue = element._value;\n                    \n                    if (_type == \"plist\") {\n                        cc.loader.releaseRes(key + \"/\" + _resValue, cc.SpriteAtlas);\n                    } else if (_type == \"sprite\") {\n                        cc.loader.releaseRes(key + \"/\" + _resValue, cc.SpriteFrame);\n                    } else {\n                        cc.loader.releaseRes(key + \"/\" + _resValue);\n                    }\n\n                    //清除 mgr保存的对象\n                    if (_type == \"ani\") {\n                        \n                    } else if (_type == \"audio\"){\n                        CC.Atom.animateMgr.cleanAniClip(_index)\n                    } else if (_type == \"font\") {\n\n                    } else if (_type == \"texture\") {\n\n                    } else if (_type == \"plist\") {\n                        cc.Atom.spriteMgr.cleanSpriteAtlas(_index)\n                    } else if (_type == \"sprite\") {\n                        cc.Atom.spriteMgr.cleanSpriteFrame(_index)\n                    } else if (_type == \"prefab\") {\n\n                    } else if (_type == \"particle\") {\n\n                    }\n                }\n            }\n\n        } else {\n            console.log(\"@@@@ 没有对应的资源 key: \", key);\n        }\n    },\n\n    //释放所有资源\n    releasAllRes: function () {\n        for (const key in this.resData) {\n            if (this.resData.hasOwnProperty(key)) {\n                this.releasResByKey(key);\n            }\n        }\n    },\n\n});\n"]}