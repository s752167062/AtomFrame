{"version":3,"sources":["MapController.js"],"names":["cc","Class","extends","Component","properties","TAG","ctor","console","log","onLoad","onDestroy","makeBrick","brickNum","Atom","gameConfMgr","getInfo","bricList","i","item","brickType","aiBrickType","ran","Math","round","random","BRICKS","TRAP","BASE","makeBrickNodes","index_tag","bricList_data","brickNodeList","length","node","prefabMgr","getPrefabObj","name","zIndex","brickScript","getComponent","setBrickData","mapUpdate","target","dt","makeNew","position_max","move","player","getChildByName","gameDataMgr","getData","y","brick","height","setData","bricks","getChildren","m","removeFromParent","nbricks","px","x","py","hitOffset","bi","abs","width","script","_type","getBrickData","gameState","setGameOver","eventMgr","notify","nodelist","j","parent"],"mappings":"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","file":"MapController.js","sourceRoot":"../../../../../assets/JJGame/Script","sourcesContent":["//MapController 只负责数据的生成，不包含节点\n/*\n    1.地图初始生成 后续在生成点添加新的点\n    2.地图向下移动，出地图的部分自动删除\n*/\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        TAG: \"MapController\"\n    },\n\n    ctor() {\n        console.log(\"-new:\" + this.TAG);\n    },\n\n    onLoad(){\n        console.log(\"-load:\" + this.TAG);\n    },\n\n    onDestroy(){\n        console.log(\"-destory:\" + this.TAG);\n    },\n\n    //生成砖块数据\n    makeBrick(){\n        var brickNum = cc.Atom.gameConfMgr.getInfo(\"brickNum\");\n        var bricList = [];\n        for (var i = 0; i < brickNum; i++) {\n            var item = {};\n            item.brickType= this.aiBrickType(); \n            item.brickNum = brickNum;//本阶的砖块数量\n            bricList[i] = item;\n        }\n        return bricList;\n    },\n    aiBrickType(){\n        //ai 运算是什么类型  base , empy , trap , buff\n        var ran = Math.round(Math.random()*10)\n        console.log(\">>>>>>> aiBrickType ran %d\" , ran)\n        if( ran < 1){\n            return  cc.Atom.gameConfMgr.BRICKS.TRAP ;//\"trap\";\n        }\n        return cc.Atom.gameConfMgr.BRICKS.BASE; //\"base\";\n    },\n\n    //生成位置节点\n    //index_tag 新一行的起始tag  （循环的 1-50 ）\n    makeBrickNodes(index_tag){\n        var bricList_data = this.makeBrick();\n        var brickNodeList = [];\n        for (var i = 0; i < bricList_data.length; i++) {\n            var item = bricList_data[i];\n            var node = cc.Atom.prefabMgr.getPrefabObj(\"brick\"); //创建一个砖块 prefab节点\n            //预设对象才处理\n            console.log(\">>> prefab obj type :\" + typeof(node))\n            if(node != null){\n                node.name = (item.brickType == cc.Atom.gameConfMgr.BRICKS.BASE ) ? \"brick\": \"component_brick\" ; //\"\" + (index_tag + i);\n                node.zIndex = 50\n                //获取预制资源中的js组件，并作出相应操作\n                var brickScript = node.getComponent('BrickDelegate');\n                brickScript.setBrickData(item);\n                brickNodeList[i] = node;\n            }else{\n                console.log(\">>>> ERR makeBrickNodes node not a prefab object !!!\")\n            }\n\n        } \n        return brickNodeList;\n    },\n\n    //地图移动\n    //target 地图层\n    mapUpdate(target ,dt){\n        var makeNew = false;\n        var position_max = 0;   \n        var move = cc.Atom.gameConfMgr.getInfo(\"gameUpdateMove\") * dt;\n        var player = target.getChildByName(\"player\")\n        if(cc.Atom.gameDataMgr.getData(\"isPlayerMove\") == true){\n            //移动角色\n            if(player){\n                player.y = player.y + move\n\n                var brick  = target.getChildByName(\"brick\")\n                var height = brick.height \n                if(player.y >= height * 3 ){\n                    player.y = height * 3 + height/2\n                    cc.Atom.gameDataMgr.setData(\"isPlayerMove\", false)\n                }\n            }\n        }else{\n            //移动砖块\n            var bricks = target.getChildren();\n            console.log(\">>>> map brick number : %d\" , bricks.length)\n            for (var i = 0; i < bricks.length; i++) {\n                var item = bricks[i];\n                if(item.name == \"brick\" || item.name == \"component_brick\"){\n                    item.y = item.y - move;\n                }\n            }\n        \n            for (var m = bricks.length -1; m >=0 ; m--){\n                var node = bricks[m];\n                if(node.name == \"brick\" || node.name == \"component_brick\"){\n                    if(node.y < -node.height/2){//节点出了界面了 删除掉\n                        makeNew = true;\n                        node.removeFromParent();\n                    }\n\n                    if(node.y > position_max){\n                        position_max = node.y;\n                    }\n                }\n            }\n        }\n\n        \n\n        //碰撞检测\n        var nbricks = target.getChildren();\n        var px = player.x\n        var py = player.y\n        var hitOffset = cc.Atom.gameConfMgr.getInfo(\"hitOffset\");//碰撞允许的偏移量\n        for (var bi = 0; bi < nbricks.length; bi++) {\n            var item = nbricks[bi];\n            if(item.name == \"component_brick\"){\n                if(Math.abs(item.x - px) < item.width - hitOffset && Math.abs(item.y -py) < item.height - hitOffset){\n                    console.log(\">>>> player hit\")\n                    var script = item.getComponent(\"BrickDelegate\");\n                    var _type = script.getBrickData().brickType;\n                    if(_type == cc.Atom.gameConfMgr.BRICKS.TRAP ){\n                        console.log(\">>>> over\")\n                        cc.Atom.gameState.setGameOver();\n                        cc.Atom.eventMgr.notify(\"onGameOver\",{ _type: _type})\n                    }\n                }\n            }\n        }\n\n        if (makeNew == true) {\n            //补上新的一行节点\n            var nodelist = this.makeBrickNodes();\n            for (var j = 0; j < nodelist.length; j++) {\n                var brick = nodelist[j];\n                if(brick){\n                    var width  = brick.width;\n                    var height = brick.height;\n                    var x = (j+1 - ( nodelist.length +1) /2) * width ;\n                    var y = position_max + height;\n                    brick.parent = target;\n                    brick.x = x;\n                    brick.y = y;\n                }\n            }\n        }\n    }\n\n});\n"]}